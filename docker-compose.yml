version: "3.3"

services:
  backend:
    image: golang:1.21
    volumes:
      - ./:/WeScore/
    working_dir: /WeScore/services/backend
    command: go run main.go
    ports:
      - 9091:9091
    depends_on:
      - db
      - redis

  frontend:
    image: node:18-alpine
    volumes:
      - .:/WeScore/
    working_dir: /WeScore/services/frontend/wescore
    command: /bin/sh -c "npm install && npm run dev"
    ports:
      - 3000:3000
    environment:
      NODE_ENV: development

  db:
    image: postgres
    ports:
      - 5432:5432
    env_file:
      - config/database.env
    volumes:
      - database-data:/var/lib/postgresql/data/
  
  pgadmin:
    image: dpage/pgadmin4
    # container_name: pgadmin4_container
    depends_on:
      - db
    restart: always
    ports:
      - 8888:80
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  redis:
    image: "redis:alpine"
    ports:
    - 6379:6379

  # proxy:
  #   image: nginx
  #   depends_on:
  #     - frontend
  #     - backend

  prometheus:
    image: prom/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./services/prometheus:/etc/prometheus
      - prom_data:/prometheus
  grafana:
    image: grafana/grafana
    ports:
      - 3300:3300
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_SERVER_HTTP_PORT=3300
    volumes:
      - ./services/grafana:/etc/grafana/provisioning/datasources

volumes:
  database-data:
  pgadmin-data:
  prom_data: